[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "dash-dlp"
dynamic = ["version"]
description = 'A dashboard frontend for yt-dlp'
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = []
authors = [
  { name = "Adrian StrzaÅ‚a", email = "adrianstrzala@gmail.com" },
]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Framework :: Dash",
  "Intended Audience :: End Users/Desktop",
  "License :: OSI Approved :: MIT License",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX :: Linux",
  "Topic :: Multimedia :: Sound/Audio",
  "Topic :: Multimedia :: Video",
  "Topic :: Utilities",
  "Typing :: Typed",
]
dependencies = []

[project.urls]
Documentation = "https://github.com/a-strzala/dash-dlp#readme"
Issues = "https://github.com/a-strzala/dash-dlp/issues"
Source = "https://github.com/a-strzala/dash-dlp"

[tool.hatch.version]
path = "src/dash_dlp/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.10", "3.11", "3.12"]

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.0.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/dash_dlp tests}"

[tool.coverage.run]
source_pkgs = ["dash_dlp", "tests"]
branch = true
parallel = true
omit = [
  "src/dash_dlp/__about__.py",
]

[tool.coverage.paths]
dash_dlp = ["src/dash_dlp", "*/dash-dlp/src/dash_dlp"]
tests = ["tests", "*/dash-dlp/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
